@using Repository.Interfaces
@inject IEmployeeRepository EmpRepo
@{
    Layout = "_UserDashboardLayout";
}
@section Cards{
    <Partial name="_EmployeeCardPartial"></Partial>
}
@section Chart{
    <Partial name="_EmployeeChartPartial"></Partial>
}

@section AddButtons{
    <form>
        <button  asp-action="Register" asp-controller="Account"> 
            <span  class="las la-users"></span>
            Add Account

        </button>
    </form>
}
<h3>Employees <small> <a asp-action="GetAllEmployees" asp-controller="AdminDashboard">See all employees</a> <span class="las la-arrow-right"></span></small></h3>
<table width="100%">
    <tbody>
        <tr>
            <td>
                <div>
                    <span class="indicator"></span>
                </div>
            </td>
            <td><div>Employee Name</div></td>
            <td><div>Email</div></td>
            <td><div style="padding-left: 2rem;">Department</div></td>
            <td><div>Position</div></td>
            @* <td><div><button style="padding: .7rem;">Add</button></div> </td> *@
        </tr>

        @foreach (var item in EmpRepo.GetTopRecords(5).OrderBy(e => e.FirstName))
        {
            <tr>
                <td>
                    <div>
                        <span class="indicator even"></span>
                    </div>
                </td>
                <td><div>@item.FirstName @item.LastName</div></td>
                <td><div>@item.Email</div></td>
                @if (item.Position is null)
                {
                    <td><div>Not Registered</div></td>
                    <td><div>Not Registered</div></td>
                }
                else
                {
                    <td><div>@item.Position.Department.DepartmentName</div></td>
                    <td><div>@item.Position.PositionName</div></td>
                }

            </tr>
        }
    </tbody>
</table>
@section JS{
    <script>
        const openFormButton = document.getElementById("openForm_AddUser");
        const formModal = document.getElementById("formModal_AddUser");
        const closeButton = document.getElementById("close_AddUser");
        const profileImage = document.getElementById("profileImage_AddUser");
        const uploadImage = document.getElementById("uploadImage_AddUser");
        const extraFields = document.getElementById("extraFields_AddUser");

        openFormButton.addEventListener("click", function () {
            formModal.style.display = "flex";
        });

        closeButton.addEventListener("click", function () {
            formModal.style.display = "none";
        });

        window.addEventListener("click", function (e) {
            if (e.target === formModal) {
                formModal.style.display = "none";
            }
        });

        const employeeRadio = document.getElementById("employee_AddUser");
        const adminRadio = document.getElementById("admin_AddUser");

        employeeRadio.addEventListener("change", function () {
            if (this.checked) {
                extraFields.classList.add("show");
            }
        });

        adminRadio.addEventListener("change", function () {
            if (this.checked) {
                extraFields.classList.remove("show");
            }
        });

        uploadImage.addEventListener("change", function (e) {
            const file = e.target.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = function (event) {
                    profileImage.src = event.target.result;
                };
                reader.readAsDataURL(file);
            }
        });
    </script>
}